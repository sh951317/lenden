pipeline {
    agent any

    environment {
        // Define SonarQube environment variables
        SONARQUBE_SCANNER_HOME = tool 'SonarQube Scanner'
        SONAR_HOST_URL = 'http://your-sonarqube-server-url'
        SONAR_PROJECT_KEY = 'your-project-key'
        SONAR_LOGIN = credentials('sonar-token-id')
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout your code from SCM
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Run your build commands (e.g., Maven, Gradle, etc.)
                sh 'mvn clean install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    // Run SonarQube analysis
                    sh "${SONARQUBE_SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectKey=${SONAR_PROJECT_KEY} -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_LOGIN}"
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    // Wait for SonarQube analysis to complete and check Quality Gate status
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
            }
        }
    }
}